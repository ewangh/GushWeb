@using System.Text
@model IEnumerable<t_alarmnotes>

@{
    ViewBag.Title = "Index";

    var ajaxOption = new AjaxOptions
    {
        UpdateTargetId = "tb",
        LoadingElementId = "loading",
        HttpMethod = "POST",
        //Confirm = "确认提交？",
        OnBegin = "onBegin()",
        OnSuccess = "onSuccess()",
        OnFailure = "onFailure()",
        OnComplete = "onComplete()",
        InsertionMode = InsertionMode.InsertAfter
    };
}
<div class="input-group" style="margin:15px 0px 10px 0px">
    @ControlHelper.DateControl(@ViewBag.Prev, @ViewBag.Current, @ViewBag.Next)
</div>

@using (Ajax.BeginForm("IndexAsyn", ajaxOption))
{
    <table class="table table-striped" name="list">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Code)
                </th>
                <th>
                    <a href="javascript:;" onclick="getChkNames()">@Html.DisplayNameFor(model => model.Name)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)%
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ltotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Num)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Time)
                </th>
            </tr>
        </thead>
        <tbody id="tb">
            @Html.Partial("pviewIndex", Model)
        </tbody>
    </table>
}
@section scripts
{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/stockBase.js"></script>
    <script src="~/Scripts/stockData.js"></script>
    <script>
        function onBegin() {
        }

        function onSuccess() {
        }

        function onFailure() {
        }

        function onComplete() {
            asyncGetStockData(getCodes).then(function(dataArray) {
                dataArray.forEach(function(item, index) {
                    updateAlarm(item[6], item[1]);
                });
            });
        }

        var today = new Date();

        function jump(date) {
            window.location.href = '@Url.Action("Index")?date=' + date;
        }

        (function () {
            enableShiftCheck($('input[name="ckb"]'));
            if (isToday()) {
                var timer = setInterval(function() { $("form").submit(); }, 30000);
            }
            asyncGetStockData(getCodes).then(function(dataArray) {
                dataArray.forEach(function(item, index) {
                    updateAlarm(item[6], item[1]);
                });
            });
        })()

        function updateAlarm(code, price) {
            $("span").each(function() {
                if ($(this).attr("name") == code) {
                    var mode = $(this).attr("mode");
                    switch (mode) {
                        case 'change':
                            updateChange($(this),price);
                            break;
                        case 'cprice':
                            updateCprice($(this),price);
                            break;
                        default:
                            break;
                    }

                }
            });
        }

        function updateChange(span,price) {
            var tagPrice = parseFloat(span.attr("tagp"));
            var tagClosed = parseFloat(span.attr("tagc"));
            if (isToday()) {
                if (!tagClosed.isNaN || tagClosed != 0) {
                    var color = tagPrice < price ? "red" : "green";
                    span.html(((price / tagClosed - 1) * 100).toFixed(2) + '%');
                    span.css("color", color);
                }
            }
            //else {
            //    if (!tagPrice.isNaN || tagPrice != 0) {
            //        var color = tagPrice < price ? "red" : "green";
            //        span.html(((price / tagPrice - 1) * 100).toFixed(2) + '%');
            //        span.css("color", color);
            //    }
            //}
        }

        function updateCprice(span,price) {
            var tagCprice = parseFloat(span.attr("tagc"));
            if (isToday()) {
                if (!tagCprice.isNaN) {
                    var color = tagCprice < price ? "red" : "green";
                    span.html(price);
                    span.css("color", color);
                }
            }
        }

        function isToday() {
            var currentDate = '@ViewBag.Current';
            return currentDate == today.Format("yyyy-MM-dd");
        }

        function getCodes() {
            var arry = new Array();
            $("[type=hidden][name='codes']").each(function() {
                arry.push($(this).val());
            });
            return arry;
        }
    </script>
}
