@using System.Text
@model IEnumerable<t_alarmnotes>

@{
    ViewBag.Title = "Index";

    var ajaxOption = new AjaxOptions
    {
        UpdateTargetId = "tb",
        LoadingElementId = "loading",
        HttpMethod = "POST",
        //Confirm = "确认提交？",
        OnBegin = "onBegin()",
        OnSuccess = "onSuccess()",
        OnFailure = "onFailure()",
        OnComplete = "onComplete()",
        InsertionMode = InsertionMode.InsertAfter
    };


}
<div class="input-group" style="margin:15px 0px 10px 0px">
    @ControlHelper.DateControl(@ViewBag.Prev, @ViewBag.Current, @ViewBag.Next)
</div>

@using (Ajax.BeginForm("IndexAsyn", ajaxOption))
{
    <table class="table" name="list">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Code)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)%
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Time)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="tb">
            @Html.Partial("pviewIndex", Model)
        </tbody>
    </table>
}
@section scripts
{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/stockData.js"></script>
    <script>
        function onBegin() {
        }

        function onSuccess() {
        }

        function onFailure() {
        }

        function onComplete() {
        }
        function jump(date) {
            window.location.href = '@Url.Action("Index")?date=' + date;
        }

        var now = new Date();
        var today = now.getFullYear() +
            "-" +
            ((now.getMonth() + 1) < 10 ? "0" : "") +
            (now.getMonth() + 1) +
            "-" +
            (now.getDate() < 10 ? "0" : "") +
            now.getDate();

        (function() {
            if (isToday()) {
                var timer = setInterval(function () { $("form").submit(); }, 9000);
            }
            updateDataChange(getCodes, updateChange, 6000);
        })()

        function updateChange(code, price) {
            $("span").each(function() {
                if ($(this).attr("name") == code) {
                    var tagPrice = parseFloat($(this).attr("tagp"));
                    var tagClosed = parseFloat($(this).attr("tagc"));
                    if (isToday()) {
                        if (!tagClosed.isNaN || tagClosed != 0) {
                            var color = tagPrice > price ? "green" : "red";
                            $(this).html(((price / tagClosed-1)*100).toFixed(2));
                            $(this).css("color", color);
                        }
                    } else {
                        if (!tagPrice.isNaN || tagPrice != 0) {
                            var color = tagPrice > price ? "green" : "red";
                            $(this).html(((price / tagPrice - 1) * 100).toFixed(2));
                            $(this).css("color", color);
                        }
                    }

                }
            });
        }

        function isToday() {
            var currentDate = '@ViewBag.Current';
            return currentDate == today;
        }

        function getCodes() {
            var arry = new Array();
            $("[type=hidden][name='codes']").each(function() {
                arry.push($(this).val());
            });
            return arry;
        }
    </script>
}
