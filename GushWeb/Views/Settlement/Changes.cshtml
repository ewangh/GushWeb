@using GushWeb.Helpers;
@model IEnumerable<t_change>
@{
    ViewBag.Title = "Changes";
    var db = new GushDBContext();
    var section = "PlateType";
    var plateTypes = new List<SelectListItem>()
{
new SelectListItem(){Text = "---PLATE---",Value = ""},
};

    var ptypes = INIhelp.GetValue(section, "plateType").Split(',');
    foreach (var pt in ptypes)
    {
        plateTypes.Add(new SelectListItem()
        {
            Text = pt,
            Value = pt
        });
    }

    int _size = 10;
    long changesPages = (from v in db.ChangesList
                         where v.Date_x == db.ChangesList.Max(dx => dx.Date_x)
                         select v).Count() / _size;

    for (int i = 0; i < changesPages; i++)
    {
        plateTypes.Add(new SelectListItem()
        {
            Text = i * _size + "--" + (i + 1) * _size,
            Value = i.ToString()
        });
    }
}

<form class="form-horizontal" role="form" method="post" id="mainForm" Autocomplete="on">
    <div id="div_rises" class="alert alert-info alert-dismissable">
    </div>
    <div class="input-group">
        @Html.DropDownList("ptype", plateTypes, new { data_live_search = "true", @class = "queryDevice selectpicker form-control" })
        <span class="input-group-btn">
            <button id="btn_search" class="btn btn-default" type="button">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </span>
    </div>
    <br />
    <div id="main" style="height: 1200px"></div>
</form>

@section scripts
{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script src="~/Scripts/stockChange.js"></script>
    <script src="~/Scripts/stockBase.js"></script>
    @Scripts.Render("~/bundles/echarts")
    <script>
        /*基于准备好的dom，初始化echarts实例*/
        var chartId = 'main';
        var mformId = "mainForm";
        var risesId = 'div_rises';
        var data = {};
        var funChange = '@Url.Action("GetChanges")';
        var funRises = '@Url.Action("GetRises")';

        function onBegin() {
            //显示
            loading.show();
        }

        function onSuccess() {
            //影藏
            loading.hide();
            getRises(funRises, data, risesId, postChanges.name);
        }

        function onFailure() {
            alert('请求错误');
            //影藏
            loading.hide();
        }

        function postChanges(value) {
            if (value != '') {
                data = { ptype: value };
                $("#ptype").find("option:contains('" + value + "')").each(function(item, index) {
                    $("button[title]").find("div:last").text($(this).text());
                    $(this).attr("selected", true);
                    return false;
                });
            }
            getChangesByData(funChange, data, chartId, onBegin, onSuccess, onFailure);
        }

        $(function() {
            getRises(funRises, data, risesId, postChanges.name);
        })

        $("#btn_search").click(function(e) {
            e.preventDefault(); //阻止事件传递
            postChanges($("#ptype").val());
        });

    </script>
}

