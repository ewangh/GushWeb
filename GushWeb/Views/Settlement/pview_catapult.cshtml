@using PagedList
@using PagedList.Mvc
@model IEnumerable<t_catapult>
@{
    var ajaxOption = new AjaxOptions
    {
        UpdateTargetId = "app",
        LoadingElementId = "loading",
        HttpMethod = "POST",
        //Confirm = "确认提交？",
        OnBegin = "onBegin()",
        OnSuccess = "onSuccess()",
        OnFailure = "onFailure()",
        OnComplete = "onComplete()",
        InsertionMode = InsertionMode.Replace
    };
}
<div id="app">
    <table class="table table-striped">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Rank)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            
            <th>
                Change
            </th>
            <th>
                NextChange
            </th>
        </tr>
        </thead>
        <tbody id="tb">
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Rank)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @ConvertHelper.AmplitudeConvert(item.Closed, item.Price)
                </td>
                <td>
                    @ConvertHelper.AmplitudeConvert(item.Price, item.NextPrice)
                </td>
            </tr>
            }
        </tbody>
    </table>
    <div style="text-align: center;">
        @Html.PagedListPager(Model as IPagedList, page => Url.Action("CatapultAsyn", new { index = page, date = ViewData["date"] }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.OnlyShowFivePagesAtATime, ajaxOption))
    </div>
</div>
