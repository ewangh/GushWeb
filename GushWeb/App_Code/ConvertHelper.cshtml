@using GushLibrary.Models
@helper AmplitudeConvert(decimal? closed, decimal? price)
{
    if (closed.HasValue && closed != 0 && price.HasValue && price != 0)
    {
        <font color=@(price>closed?"red":"green")>@String.Format("{0:P}", price / closed - 1)</font>
        //@:%
    }
    else
    {
        @String.Empty
    }
}

@helper AmplitudeConvert(decimal? val, decimal offset = 0)
{
    if (val >= offset)
    {
        <font color="red">@String.Format("{0:P}", val / 100)</font>
    }
    else if (val < offset)
    {
        <font color="green">@String.Format("{0:P}", val / 100)</font>
    }
}

@helper ColorConvert(decimal? val, decimal offset = 0)
{
    if (val >= offset)
    {
        <font color="red">@val</font>
    }
    else if (val < offset)
    {
        <font color="green">@val</font>
    }
}

@helper ForceConvert(ForceState? state)
{
    <font color=@(state==ForceState.LA?"green":state==ForceState.la?"red":"grey")>@state.ToString()</font>
}


@helper BoardRemarkConvert(int days, int plates)
{
    <span>@($"{days}天{plates}板")</span>
}

